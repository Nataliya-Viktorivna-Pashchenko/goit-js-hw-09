{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAyCpCF,EAAKG,iBAAiB,UA3BtB,SAAmBC,GACjBA,EAAMC,iBACN,MAAMC,EAAaC,OAAOP,EAAKQ,MAAMC,OAC/BC,EAAYH,OAAOP,EAAKW,KAAKF,OAC7BG,EAASL,OAAOP,EAAKY,OAAOH,OAElC,GAAIG,GAAU,EACZC,EAAAf,GAASgB,OAAOC,QAAQ,4CAExB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAC/B,MAAMC,EAAWD,EAAI,EACfE,EAAQZ,EAAaI,EAAYM,EACvCG,YAAW,KAxBjB,IAAuBC,EAAUZ,GAAVY,EAyBDH,EAzBWT,EAyBDU,EAxBvB,IAAIG,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,C,SAAEF,E,MAAUZ,IAEpBe,EAAO,C,SAAEH,E,MAAUZ,GAAQ,KAoBxBkB,MAAK,EAACN,SAAEA,EAAQZ,MAAEA,MACjBK,EAAAf,GAASgB,OAAOa,QAAQ,uBAAqBP,QAAiBZ,MAAU,IAEzEoB,OAAM,EAACR,SAAEA,EAAQZ,MAAEA,MAClBK,EAAAf,GAASgB,OAAOe,QAAQ,sBAAoBT,QAAeZ,MAAU,GACrE,GACDU,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n       if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n};\n\n\nfunction onCreate (event) {\n  event.preventDefault();\n  const firstDelay = Number(form.delay.value);\n  const delayStep = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  if (amount <= 0) {\n    Notiflix.Notify.warning(\"Value of amount must be more than 0\");\n  } else {\n    for (let i = 0; i < amount; i++) {\n      const position = i + 1;\n      const delay = firstDelay + delayStep * i;\n      setTimeout(() => {\n        createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      }, delay);\n      \n      \n    }\n  }\n};\n  \nform.addEventListener('submit', onCreate);\n\n// if (shouldResolve) {\n//       setTimeout(() => resolve({ position, delay }), delay);\n//     } else {\n//       setTimeout(() => reject({ position, delay }), delay);\n//     }"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","delay","value","delayStep","step","amount","$parcel$interopDefault","Notify","warning","i","position1","delay1","setTimeout","position","Promise","resolve","reject","Math","random","then","success","catch","failure"],"version":3,"file":"03-promises.2e151518.js.map"}